
env READMEFILE=README.md
env GITHUB_TOKEN=faketoken

# Skip build, use these fake binaries.
# Txtar produces \r\n on Windows, which does not work well with checksums, so normalize the expected file set here.
dostounix dist/hugo/v1.2.0/builds/main/base/windows/amd64/hugo.exe
dostounix dist/hugo/v1.2.0/builds/main/base/darwin/arm64/hugo
dostounix dist/hugo/v1.2.0/builds/main/base/darwin/amd64/hugo
dostounix dist/hugo/v1.2.0/builds/main/base/linux/amd64/hugo
dostounix dist/hugo/v1.2.0/builds/main/base/linux/arm/hugo
dostounix expected/dist/myrelease/checksums.txt

# Build archives
hugoreleaser archive -tag v1.2.0
! stderr .
exists $WORK/dist/hugo/v1.2.0/archives/main/base/darwin/amd64/hugo_1.2.0_macOS-64bit.tar.gz

# Run with the a faketoken to avoid actually creating a remote release.
hugoreleaser release -tag v1.2.0 -commitish main
# 3 archives + checksums.txt
stdout 'Prepared 4 files to archive'
stdout 'hugo_1.2.0_checksums\.txt'
cmp $WORK/dist/hugo/v1.2.0/releases/myrelease/hugo_1.2.0_checksums.txt $WORK/expected/dist/myrelease/checksums.txt

# Test files
# Release notes
-- temp/my-release-notes.md --
## Release notes
* Change 1
# Fake binaries to get stable archive checksums.txt.
-- dist/hugo/v1.2.0/builds/main/base/windows/amd64/hugo.exe --
win-amd64
-- dist/hugo/v1.2.0/builds/main/base/darwin/arm64/hugo --
darwin-armd64
-- dist/hugo/v1.2.0/builds/main/base/darwin/amd64/hugo --
darwin-amd64
-- dist/hugo/v1.2.0/builds/main/base/linux/amd64/hugo --
linux-amd64
-- dist/hugo/v1.2.0/builds/main/base/linux/arm/hugo --
linux-amd

# Expected output
-- expected/dist/myrelease/checksums.txt --
19c2308936cdc630dfb1c3620d54fc22dc072dd6d04f8aa0872963c3fb547572  hugo_1.2.0_Windows-64bit.zip
8a49e492c1b787821fe81695617dcaf211ca3c0428094f3a4a4c1401678993a0  hugo_1.2.0_macOS-64bit.tar.gz
df51345af47d4122b133055aa8bb6109cc47504026c29634b0a6e77f6aa7ebcf  hugo_1.2.0_linux-64bit.tar.gz
-- hugoreleaser.yaml --
project: hugo
release_settings:
  type: github
  repository: hugoreleaser
  repository_owner: bep
  draft: true
  release_notes_settings:
    filename: temp/my-release-notes.md
build_settings:
  binary: hugo
  flags:
    - -trimpath
archive_settings:
  name_template: "{{ .Project }}_{{ .Tag | trimPrefix `v` }}_{{ .Goos }}-{{ .Goarch }}"
  extra_files:
    - source_path: ${READMEFILE}
      target_path: README.md
    - source_path: license.txt
      target_path: license.txt
  type:
    format: rename
    extension: .tar.gz
  replacements:
    "386": 32bit
    amd64: 64bit
    arm64: ARM64
    darwin: macOS
    windows: Windows
builds:
  - path: main/base
    build_settings:
      env:
        - CGO_ENABLED=0
      ldflags: -s -w -X github.com/gohugoio/hugo/common/hugo.vendorInfo=gohugoio
      flags:
        - -buildmode
        - exe
    os:
      - goos: darwin
        archs:
          - goarch: amd64
          - goarch: arm64
      - goos: linux
        archs:
          - goarch: amd64
          - goarch: arm
      - goos: windows
        build_settings:
          binary: hugo.exe
        archs:
          - goarch: amd64
archives:
  - paths:
      - builds/**/{darwin,linux}/amd64
    archive_settings: {}
  - paths:
      - builds/**/windows/*
    archive_settings:
      type:
        format: rename
        extension: .zip
releases:
  - paths:
      - archives/**
    path: myrelease


-- go.mod --
module foo
-- main.go --
package main
func main() {

}
-- README.md --
This is readme.
-- license.txt --
This is license.
