env GOCACHE=$WORK/gocache

hugoreleaser build -tag v1.2.0 -try
! exists $WORK/dist/hugo/v1.2.0/builds/linux/amd64/hugo
stdout 'Building binary.*hugo'

hugoreleaser archive -tag v1.2.0 -try
! exists $WORK/dist/hugo/v1.2.0/archives/linux/amd64/hugo_1.2.0_linux-amd64.tar.gz
stdout 'Archive file.*hugo_1.2.0_linux-amd64.tar.gz'

# Test files
-- hugoreleaser.toml --
project = "hugo"
[build_settings]
binary = "hugo"
[[builds]]
[[builds.os]]
goos = "linux"
[[builds.os.archs]]
goarch = "amd64"
[[archives]]
paths = "/builds/**"
[archive_settings]
name_template = "{{ .Project }}_{{ .Tag | trimPrefix `v` }}_{{ .Goos }}-{{ .Goarch }}"
[archive_settings.type]
format        = "tar.gz"
extension = ".tar.gz"

-- go.mod --
module foo
-- main.go --
package main
func main() {

}
-- README.md --
This is readme.
-- license.txt --
This is license.