
env HUGORELEASER_TAG=1.2.0
env HUGORELEASER_COMMITISH=main
# faketoken is a magic string that will create a FakeClient.
env GITHUB_TOKEN=faketoken

# Build arm* and 386.
hugoreleaser build -paths builds/**/{arm,386}*
! stdout amd64
stdout arm64

# Archive freebsd only.
# Archive filter in config is "builds/unix/**".
hugoreleaser archive -paths builds/**/freebsd/{arm,386}*
! stdout linux
! stdout amd64
stdout freebsd

# We have now only freebsd 3 archives.
hugoreleaser release -paths releases/bsd
stdout 'Prepared 3 files' # 2 archives + checksums.txt.

# Test files
-- hugoreleaser.yaml --
project: hugo
build_settings:
  binary: hugo
release_settings:
  type: github
  repository: hugoreleaser
  repository_owner: bep
  draft: true
archive_settings:
  name_template: "{{ .Project }}_{{ .Tag | trimPrefix `v` }}_{{ .Goos }}-{{ .Goarch }}"
  extra_files:
    - source_path: README.md
      target_path: README.md
    - source_path: license.txt
      target_path: license.txt
  type:
    format: tar.gz
    extension: .tar.gz
builds:
  - path: unix
    os:
      - goos: freebsd
        archs:
          - goarch: amd64
          - goarch: arm64
          - goarch: arm
          - goarch: "386"
      - goos: linux
        archs:
          - goarch: amd64
          - goarch: arm64
          - goarch: arm
  - path: win
    os:
      - goos: windows
        archs:
          - goarch: amd64
          - goarch: arm64
archives:
  - paths:
      - builds/unix/**
releases:
  - paths:
      - archives/**/freebsd/arm*
    path: bsd
  - paths:
      - archives/win/**
    path: win


-- go.mod --
module foo
-- main.go --
package main
func main() {

}
-- README.md --
This is readme.
-- license.txt --
This is license.